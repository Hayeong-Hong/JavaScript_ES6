1. 스프레드 문법
     - ...키워드로 사용
     - 스레드 문법은 하나로 뭉쳐있는 여러 값들의 집합을 펼쳐서 개별적인 값들의 목록으로 만듦
        //객체는 스프레드 문법을 사용할 수 없음
        //스프레드 문법의 결과값을 변수에 담을 수 없음
        //max같이 배열을 받지 못하는 함수에 적용시킬 수 있음
     - Rest 파라미터와는 완전 반대 개념이다
     - Rest 파라미터는 매개변수로 전달된 값들을 배열로 묶어주는것

2. 디스트럭처링 할당(비구조화 할당)
     - 배열같은 집합 또는 객체의 구조를 파괴하여 1개 이상의 변수에 개별적으로 할당하는 것
        //비구조화 할당을 할 때는 항상 오른쪽에 배열같은 집합이 지정되야 한다.
        //비구조화 할당의 기준은 인덱스다
        //순서대로 할당되어 변수의 개수를 요소의 개수와 맞춰줄 필요는 없음(공백을 이용해 뛰어넘기가능)
        //Rest파라미터와 함께 혼용 가능하다

3. set
     - set은 중복되지 않은 유일한 값들의 집합
     - 배열과 유사하지만 순서가 의미가 없고, 중복값이 허용되지 않으며, 인덱스로 접근할 수 없다.
     - set의 선언은 new Set();
     - 등장 전/후 중복제거 방법 참조(예제39)
        //Set이 등장하기 전 중복 제거
            //v : 현재 검사할 요소
            //i : 현재 인덱스
            //self : array자체(this)
            const uniq = array => array.filter((v, i, self) => (self.indexOf(v)===i));
            console.log(uniq([2,1,2,3,4,4,3,2,1]));

     - Set에 요소를 추가할 때는 add 사용
     - add도 체이닝 기법 사용가능, 중복값이면 오류는 안뜨지만 무시됨
     - 자바의 배열처럼 모든 형태의 변수를 가질 수 있음, 배열이나 객체도 들어갈 수 있음
     - Set 요소 존재 여부 확인 has